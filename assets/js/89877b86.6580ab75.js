"use strict";(self.webpackChunkmare_ai=self.webpackChunkmare_ai||[]).push([[876],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(g,r(r({ref:n},c),{},{components:t})):a.createElement(g,r({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3038:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=t(7462),o=(t(7294),t(3905));const i={sidebar_position:1},r="Docker - Single node",l={unversionedId:"getting-started/deployment/docker",id:"getting-started/deployment/docker",title:"Docker - Single node",description:"Deployment single node via docker container",source:"@site/docs/getting-started/deployment/docker.md",sourceDirName:"getting-started/deployment",slug:"/getting-started/deployment/docker",permalink:"/docs/getting-started/deployment/docker",draft:!1,editUrl:"https://github.com/gregbugaj/marie-ai/tree/develop/docs/docs/getting-started/deployment/docker.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deployment",permalink:"/docs/category/deployment"},next:{title:"Control Plane",permalink:"/docs/getting-started/deployment/control-plane"}},p={},s=[{value:"User and permission setup",id:"user-and-permission-setup",level:2},{value:"Basic Configuration",id:"basic-configuration",level:2},{value:"Directory layout",id:"directory-layout",level:3},{value:"Single-GPU",id:"single-gpu",level:4},{value:"Multi-GPU",id:"multi-gpu",level:4},{value:"Required configuration",id:"required-configuration",level:3},{value:"Application Logs with Docker",id:"application-logs-with-docker",level:2},{value:"Named volumes",id:"named-volumes",level:3},{value:"Bind Mount",id:"bind-mount",level:3},{value:"Permission setup : UID/GID",id:"permission-setup--uidgid",level:3},{value:"Container management",id:"container-management",level:2},{value:"Update container to specific version",id:"update-container-to-specific-version",level:3},{value:"Starting container",id:"starting-container",level:3},{value:"References",id:"references",level:3}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker---single-node"},"Docker - Single node"),(0,o.kt)("p",null,"Deployment single node via docker container"),(0,o.kt)("h2",{id:"user-and-permission-setup"},"User and permission setup"),(0,o.kt)("p",null,"The container is setup with ",(0,o.kt)("inlineCode",{parentName:"p"},"app-svc")," account so for that we will setup same account in the host system."),(0,o.kt)("p",null,"Setting up user, for more info visit ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"},"Manage Docker as a non-root user")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo useradd --comment 'app-svc' --create-home app-svc --shell /bin/bash\nsudo usermod -aG docker app-svc\n")),(0,o.kt)("p",null,"Directory structure, this is more of a convention than requirement."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo mkdir -p /opt/containers/apps/marie-ai\nsudo mkdir -p /opt/containers/config/marie-ai\n")),(0,o.kt)("p",null,"Change permissions to ",(0,o.kt)("inlineCode",{parentName:"p"},"app")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"config")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd /opt/containers\nsudo chown app-svc:app-svc apps/ -R\nsudo chown app-svc:app-svc config/ -R\n")),(0,o.kt)("p",null,"Now that we have our directory and permissions setup we can move on and setup the container.\nThe easiest way to manage container is by checking out the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gregbugaj/marie-ai.git"},"Marie-AI project")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"sudo su app-svc\n\ngit clone https://github.com/gregbugaj/marie-ai.git\n")),(0,o.kt)("h2",{id:"basic-configuration"},"Basic Configuration"),(0,o.kt)("admonition",{title:"Container Configuration",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"This is a single node setup up without control-plane."),(0,o.kt)("p",{parentName:"admonition"},"Complete configuration setup can be found under ",(0,o.kt)("a",{parentName:"p",href:"/docs/category/configuration"},"Configuration"),".")),(0,o.kt)("p",null,"Before we are able to start the container we need to configure few components. "),(0,o.kt)("h3",{id:"directory-layout"},"Directory layout"),(0,o.kt)("p",null,"This is the initial entrypoint for ",(0,o.kt)("inlineCode",{parentName:"p"},"models")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"config"),", this can be changed by modifying ",(0,o.kt)("inlineCode",{parentName:"p"},"run.sh")," Directories will be mapped as volumes when the container is created."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"TODO : this needs to be configurable via ENV variables"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"/mnt/data/marie-a\n/opt/logs/marie-icr\n")),(0,o.kt)("h4",{id:"single-gpu"},"Single-GPU"),(0,o.kt)("p",null,"On a single GPU the directory structure should loook like following"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/mnt/data/marie-ai/\n\u251c\u2500\u2500 config\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 executors\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u2502\xa0\xa0     \u2514\u2500\u2500 log\n\u2514\u2500\u2500 model_zoo\n")),(0,o.kt)("h4",{id:"multi-gpu"},"Multi-GPU"),(0,o.kt)("p",null,"If the system support muli-gpus then we can configure the system to take advanate of that. Configuration is almost identical to single gpu.\nFor each GPU we adappend GPU-ID to the config directory names"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/mnt/data/marie-ai/\n\u251c\u2500\u2500 config-0\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u251c\u2500\u2500 config-1\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u251c\u2500\u2500 config-2\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u251c\u2500\u2500 config-3\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u251c\u2500\u2500 config-template\n\u2502\xa0\xa0 \u251c\u2500\u2500 consul\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocr\n\u2502\xa0\xa0 \u2514\u2500\u2500 traefik\n\u2514\u2500\u2500 model_zoo\n")),(0,o.kt)("h3",{id:"required-configuration"},"Required configuration"),(0,o.kt)("p",null,"The easiest way to initialize the configs is by copying them from the project ",(0,o.kt)("inlineCode",{parentName:"p"},"config")," directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"/mnt/data/marie-ai/config/marie.yml\n")),(0,o.kt)("h2",{id:"application-logs-with-docker"},"Application Logs with Docker"),(0,o.kt)("p",null,"There are couple ways that we can log from within a container to outside world."),(0,o.kt)("h3",{id:"named-volumes"},"Named volumes"),(0,o.kt)("p",null,"First option(default) is to use a ",(0,o.kt)("inlineCode",{parentName:"p"},"docker volume")," and create new named volume called ",(0,o.kt)("inlineCode",{parentName:"p"},"marie_logs")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This is preferred option for single node setups.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"sudo mkdir -p /var/log/marie-ai\nsudo chown app-svc:app-svc /var/log/marie-ai -R\n\ndocker volume create --driver local --name marie_logs --opt type=none --opt device=/var/log/marie-ai --opt o=uid=root,gid=root --opt o=bind\n")),(0,o.kt)("p",null,"When we list the docker volumes we should see ",(0,o.kt)("inlineCode",{parentName:"p"},"marie_logs")," in the output."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ docker volume ls\nDRIVER    VOLUME NAME\nlocal     marie_cache\nlocal     marie_logs\n")),(0,o.kt)("p",null,"After the volume is created it can be mapped in the docker with the docker ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," flag.\nApplication will log by default to ",(0,o.kt)("inlineCode",{parentName:"p"},"/home/app-svc/logs")," directory, this can be changed by modifying ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/logging.default.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"-v marie_logs:/home/app-svc/logs\n")),(0,o.kt)("p",null,"We can inspect the volume and display the mount points via ",(0,o.kt)("inlineCode",{parentName:"p"},"docker volume inspect marie_logs"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'$ docker volume inspect marie_logs \n[\n    {\n        "CreatedAt": "2022-10-28T23:11:05Z",\n        "Driver": "local",\n        "Labels": {},\n        "Mountpoint": "/var/lib/docker/volumes/marie_logs/_data",\n        "Name": "marie_logs",\n        "Options": {\n            "device": "/var/log/marie-ai",\n            "o": "bind",\n            "type": "none"\n        },\n        "Scope": "local"\n    }\n]\n\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ls -lt /var/log/marie-ai/*\n-rw------- 1 root root    66 Oct 31 16:22 /var/log/marie-ai/ssh-agent-stderr---supervisor-ee3f8v_8.log\n-rw-r--r-- 1  431  433 45654 Oct 31 16:22 /var/log/marie-ai/marie-2022-10-31T16:17:53.299405.log\n-rw------- 1 root root    75 Oct 31 16:17 /var/log/marie-ai/ssh-agent-stdout---supervisor-gann9r5z.log\n")),(0,o.kt)("h3",{id:"bind-mount"},"Bind Mount"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Preferred method for multi-node setup. This allows for better log segregation by GPU.")),(0,o.kt)("h3",{id:"permission-setup--uidgid"},"Permission setup : UID/GID"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"uid")," is a number associated with a user account and ",(0,o.kt)("inlineCode",{parentName:"p"},"gid")," is a number associated with a group\nThe log directory needs to have the UID/GID of ",(0,o.kt)("inlineCode",{parentName:"p"},"431:433")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ id\nuid=431(app-svc) gid=433(app-svc) groups=433(app-svc),998(docker)\n")),(0,o.kt)("p",null,"IDs are coming the user setup."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"431")," : User ID given to ",(0,o.kt)("inlineCode",{parentName:"p"},"app-svc")," account\n",(0,o.kt)("inlineCode",{parentName:"p"},"433")," : Group ID given to ",(0,o.kt)("inlineCode",{parentName:"p"},"app-svc")," account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"sudo mkdir -p /var/log/marie-ai\nsudo chown app-svc:app-svc /var/log/marie-ai -R\n")),(0,o.kt)("p",null,"On a 4 GPU system the log directory should look like following, this includes couple log files."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ tree /var/log/marie-ai\n/var/log/marie-ai/\n\u251c\u2500\u2500 0\n\u2502\xa0\xa0 \u251c\u2500\u2500 marie-2022-10-31T19:55:40.712174.log\n\u251c\u2500\u2500 1\n\u251c\u2500\u2500 2\n\u251c\u2500\u2500 3\n\u2502\xa0\xa0 \u251c\u2500\u2500 marie-2022-10-31T19:59:40.286707.log\n\u2514\u2500\u2500 all\n")),(0,o.kt)("p",null,"After the directory s created it can be mapped in the docker with the docker ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," flag.\nApplication will log by default to ",(0,o.kt)("inlineCode",{parentName:"p"},"/home/app-svc/logs")," directory, this can be changed by modifying ",(0,o.kt)("inlineCode",{parentName:"p"},"resources/logging.default.yml")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"$GPUS")," variable will be set from shell script while executed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"-v /var/log/marie-ai/$GPUS:/home/app-svc/logs\n")),(0,o.kt)("h2",{id:"container-management"},"Container management"),(0,o.kt)("p",null,"To manage a container we have a set of scripts located in ",(0,o.kt)("inlineCode",{parentName:"p"},"marie-ai/docker-util")),(0,o.kt)("admonition",{title:"Changing container version",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"To change container version edit ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," file, it should contain a specific version that we like to use ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/registry/"},"Docker Registry"),"."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"gregbugaj/marie-icr:2.4-cuda\n")),(0,o.kt)("p",{parentName:"admonition"},"This could also include your specific registy as well."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},"localhost:5000/gregbugaj/marie-icr:2.4-cuda\n"))),(0,o.kt)("h3",{id:"update-container-to-specific-version"},"Update container to specific version"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd marie-ai/docker-util\n./update.sh\n")),(0,o.kt)("h3",{id:"starting-container"},"Starting container"),(0,o.kt)("p",null,"Start single ",(0,o.kt)("inlineCode",{parentName:"p"},"marie-ai")," container in interactive mode with ",(0,o.kt)("strong",{parentName:"p"},"ALL GPUS")," assigned to single instance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"./run-interactive-gpu.sh\n")),(0,o.kt)("p",null,"You should see initial output :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Starting interactive/dev container : marie-icr\nGPU_COUNT : 4\nGPUS Selected  > all\nCONTAINER_NAME > marie-icr\nCONTAINER_ID   > \nCONFIG         > config\nPORT           > 6000\nCONFIG_DIR     > /mnt/data/marie-ai/config\n")),(0,o.kt)("h3",{id:"references"},"References"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/volumes/"},"Docker volumes"),"\n",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/bind-mounts/"},"Bind Mounts")))}d.isMDXComponent=!0}}]);
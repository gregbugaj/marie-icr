# PACKAGE DEPENDENCIES
#
# Essential: only 5, they are labeled with `core`: docarray, numpy, grpcio, protobuf, pyyaml. They will be installed
#           when you do `pip install marieai`. They are essential to run 90% features & functionalities of MarieAI.
# Extensions: they are labeled with different tags. They will NOT be installed by default. One can install a group of
#           of dependencies labeled `tag` by `pip install "marieai[tag]"`
#
# FILE FORMAT
# https://hanxiao.io/2019/11/07/A-Better-Practice-for-Managing-extras-require-Dependencies-in-Python/
# Put your extra requirements here in the following format
#
# package[version]: tag1, tag2, ...
#
#
# REMARKS ON TAGS
# 1. Try to reuse the existing tags if possible.
#    If you intend to create a new tag, keep it alphabetical, short and general
# 2. Package name itself is a tag already, so you don't need to tag it again.
#    For example, 'numpy>=0.4.1: numpy' is redundant
# 3. Tag order doesn't matter; case-sensitive; duplicated tag will be ignored
# 4. Tag `all` is reserved for representing all packages

# AVAILABLE TAGS:
# core < perf < standard < devel: these tags correspond to Docker image tag
# test: required for **setting up test ENVIRONMENT**


numpy:                      standard,core
# Pinning to version 3.20.0 as this will cause issues with tensorboard
protobuf=3.20.0:            standard,core
#protobuf>=3.20.0:          standard,core
grpcio>=1.46.0,<1.48.1:     standard,core
grpcio-reflection>=1.46.0,<1.48.1:  standard,core
grpcio-health-checking>=1.46.0,<1.48.1:  standard,core
pyyaml>=5.3.1:              standard,core
packaging>=20.0:            standard,core
docarray>=0.16.4:           standard,core

prometheus_client:          standard,perf
psutil:                     test
uvloop:                     perf,standard,devel

opentelemetry-instrumentation-grpc: perf,standard,devel
prometheus_client>=0.12.0:          perf,standard,devel
opentelemetry-sdk>=1.12.0:   perf,standard,devel
opentelemetry-exporter-otlp>=1.12.0:  perf,standard,devel
opentelemetry-exporter-prometheus>=1.12.0rc1:  perf,standard,devel
opentelemetry-semantic-conventions>=0.33b0:    perf,standard,devel
opentelemetry-instrumentation-aiohttp-client>=0.33b0:    perf,standard,devel
opentelemetry-instrumentation-fastapi>=0.33b0: perf,standard,devel
opentelemetry-exporter-otlp-proto-grpc>=1.13.0: perf,standard,devel
fastapi>=0.76.0:            standard,devel
uvicorn[standard]:          standard,devel
docker:                     standard,devel
pathspec:                   standard,devel
filelock:                   standard,devel
requests:                   standard,devel
websockets:                 standard,devel
pydantic:                   standard,devel
python-multipart:           standard,devel
aiofiles:                   standard,devel
aiohttp:                    standard,devel
aiostream:                  standard,devel


pytest:                     test
pytest-timeout:             test
pytest-mock:                test
pytest-cov==3.0.0:          test
coverage==6.2:              test
pytest-repeat:              test
pytest-asyncio:             test
pytest-reraise:             test
mock:                       test
requests-mock:              test
pytest-custom_exit_code:    test


strawberry-graphql>=0.96.0: cicd,devel

python-consul2:                     perf,standard,devel
version: "3.9"

services:
  
  # Dashboard accessible via `http://localhost:8500/`
  consul-server:
    image: consul:1.11.0
    container_name: consul_marie_server
    restart: always
    volumes:
     - ./config/consul/server.json:/consul/config/server.json:ro
    network_mode: host
    # networks:  -- THIS Will throw ERROR: only one instance of “host” network is allowed
    #   - delvnet
    # ports:
    #   - "8500:8500"
    #   - "8600:8600/tcp"
    #   - "8600:8600/udp"
    # command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0"
    command: "agent -server -bootstrap-expect 1"

  # Dashboard accessible via `http://localhost:7777/dashboard/#/'
  traefik:
    image: traefik:v2.8.3
    container_name: "traefik"
    restart: always
    command: --api --api.statistics --docker
#    network_mode: host
    networks:
      - public
    ports:
      - "7777:7777"
      - "5000:5000"
    depends_on:
      - consul-server
    labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
        - "traefik.http.routers.dashboard.entrypoints=traefik"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "metrics.prometheus=true"

    volumes:
      - ./config/traefik:/etc/traefik
      - ./config/traefik/traefik.yml:/traefik.yml
      - ./config/traefik/file-provider.yml:/etc/traefik/file-provider.yml
      - "./config/traefik/user-credentials:/user-credentials:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  psql:
    image: postgres:${POSTGRES_VERSION}
    restart: always
#    network_mode: host
    ports:
      - "5432:5432"
    expose:
      - 10000-60000
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
#      - ./db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql


volumes:
  db:
    driver: local

# ############### Networks ###############
networks:
  public:
    external: true

# ############### Networks ###############
# networks:
#   delvnet:  # Used by Traefik to get the client REAL IP
#     driver: host

# Container networking setup
# docker network create --driver=bridge public
# sysctl net.ipv4.conf.all.forwarding=1

# Reverse proxy
# ssh -L 5000:localhost:5000 7777:localhost:7777 gbugaj@192.168.102.65